package scaffold

import (
	"fmt"

	"github.com/ainsleydev/webkit/internal/manifest"
)

// Option is a function that configures write options
type Option func(*writeOptions)

// writeOptions holds configuration for write operations
type writeOptions struct {
	mode           WriteMode
	suppressNotice bool
	tracking       trackingData
}

// trackingData defines the data when WithTracking is called.
type trackingData struct {
	enabled   bool
	generator string // Which function generated this.
	source    string // What app.json element caused this.
}

// WithScaffoldMode sets the write mode for the operation
func WithScaffoldMode() Option {
	return func(opts *writeOptions) {
		opts.mode = ModeScaffold
	}
}

// WithoutNotice disables the standard "Generated by WebKit" notice.
func WithoutNotice() Option {
	return func(opts *writeOptions) {
		opts.suppressNotice = true
	}
}

// WithTracking adds generators and sources to each file
// so it can be tracked in the manifest.
func WithTracking(source string) Option {
	caller := manifest.Caller()
	return func(opts *writeOptions) {
		opts.tracking = trackingData{
			enabled:   true,
			generator: fmt.Sprintf("%s:%s", caller.Package, caller.Function),
			source:    source,
		}
	}
}

// defaultOptions returns the default write options.
func defaultOptions() *writeOptions {
	return &writeOptions{
		mode:           ModeGenerate,
		suppressNotice: false,
	}
}

// applyOptions applies the given options to writeOptions.
func applyOptions(opts ...Option) *writeOptions {
	o := defaultOptions()
	for _, opt := range opts {
		opt(o)
	}
	return o
}
