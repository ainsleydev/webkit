# Code generated by webkit; DO NOT EDIT.
name: PR

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - master

# Only allow one of these to run per branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  setup-webkit:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Read WebKit Version
        id: version
        shell: bash
        run: |
          WEBKIT_VERSION=$(jq -r '.webkit_version // "latest"' "app.json")
          echo "version=$WEBKIT_VERSION" >> $GITHUB_OUTPUT
          echo "Detected WebKit version: $WEBKIT_VERSION"

      - name: Download WebKit Release Asset
        id: setup
        uses: robinraju/release-downloader@v1
        with:
          repository: 'ainsleydev/webkit'
          tag: ${{ steps.version.outputs.version }}
          fileName: 'webkit_linux_x86_64.tar.gz'
          extract: true

      - name: Upload WebKit CLI Artifact
        uses: actions/upload-artifact@v4
        with:
          name: webkit
          path: webkit
          if-no-files-found: error
  drift-detection:
    runs-on: ubuntu-latest
    needs: setup-webkit
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Download WebKit CLI Artifact
        uses: actions/download-artifact@v4
        with:
          name: webkit
          path: ./

      - name: Make WebKit executable
        run: chmod +x ./webkit

      - name: Run Drift Detection
        id: drift
        run: |
          # Capture drift output in markdown format
          if ./webkit drift --format=markdown > drift-output.md 2>&1; then
            echo "drift_detected=false" >> $GITHUB_OUTPUT
          else
            echo "drift_detected=true" >> $GITHUB_OUTPUT
          fi

          # Store output for PR comment
          {
            echo 'drift_message<<EOF'
            cat drift-output.md
            echo 'EOF'
          } >> $GITHUB_OUTPUT

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: ./.github/actions/pr-comment
        with:
          body-includes: 'WebKit Drift'
          comment-body: ${{ steps.drift.outputs.drift_message }}
          issue-number: ${{ github.event.pull_request.number }}
          private-key: ${{ secrets.ORG_GITHUB_APP_PRIVATE_KEY }}

      - name: Fail Workflow if Drift Detected
        if: steps.drift.outputs.drift_detected == 'true'
        run: |
          echo "❌ Drift detected in WebKit-generated files"
          echo "Run 'webkit update' to sync your project with the latest templates"
          exit 1

  app-json-diff:
    runs-on: ubuntu-latest
    needs: setup-webkit
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Download WebKit CLI Artifact
        uses: actions/download-artifact@v4
        with:
          name: webkit
          path: ./

      - name: Make WebKit executable
        run: chmod +x ./webkit

      - name: Calculate Diff
        id: diff
        run: |
          base="remotes/origin/main"
          output=$(git diff $base $GITHUB_BRANCH -- app.json)

          echo "=== Raw diff output ==="
          echo "$output"
          echo "========================"

          if [[ -n "$output" ]]; then
            echo "diff_found=true" >> $GITHUB_OUTPUT
            {
              echo 'diff_message<<EOF'
              echo "### app.json has been changed"
              echo ""
              echo "Diff is below. \`a = base branch\`, \`b = this branch\`"
              echo ""
              echo '```diff'
              echo "$output"
              echo '```'
              echo 'EOF'
            } >> $GITHUB_OUTPUT
          else
            echo "diff_found=false" >> $GITHUB_OUTPUT
          fi

      - name: Comment on PR
        if: steps.diff.outputs.diff_found == 'true' && github.event_name == 'pull_request'
        uses: ./.github/actions/pr-comment
        with:
          body-includes: 'WebKit Drift'
          comment-body: ${{ steps.diff.outputs.diff_message }}
          issue-number: ${{ github.event.pull_request.number }}
          private-key: ${{ secrets.ORG_GITHUB_APP_PRIVATE_KEY }}
  app-cms:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Format
        run: pnpm format

      - name: Lint
        run: pnpm lint

      - name: Test
        run: pnpm test

      - name: Build
        run: pnpm build
  app-web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Format
        run: pnpm format

      - name: Lint
        run: pnpm lint

      - name: Test
        run: pnpm test

      - name: Build
        run: pnpm build
  app-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Format
        run: gofmt -w .

      - name: Lint
        run: golangci-lint run

      - name: Test
        run: go test ./...

      - name: Build
        run: go build main.go
