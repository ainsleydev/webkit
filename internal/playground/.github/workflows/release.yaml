# Code generated by webkit; DO NOT EDIT.
name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

# Prevent concurrent deployments.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Build Containers
  build-and-push:
    name: Build and Push to GHCR
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: cms
            context: ./cms
            dockerfile: ./cms/Dockerfile
          - name: web
            context: ./web
            dockerfile: ./web/Dockerfile
          - name: api
            context: ./api
            dockerfile: ./api/Dockerfile
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-${{ matrix.service.name }}
          tags: |
            type=raw,value=latest
            type=sha,format=long

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-${{ matrix.service.name }}:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-${{ matrix.service.name }}:cache,mode=max

  # Remove Unwanted Containers
  cleanup:
    name: Cleanup Containers
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      packages: write
    strategy:
      matrix:
        service: [cms, web, api]
    steps:
      - name: Delete old images from GHCR
        uses: actions/delete-package-versions@v5
        with:
          package-name: '${{ github.event.repository.name }}-${{ matrix.service }}'
          package-type: 'container'
          min-versions-to-keep: 5
          delete-only-untagged-versions: false
